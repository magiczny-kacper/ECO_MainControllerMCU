##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.19.2] date: [Fri Apr 14 01:07:04 CEST 2023] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = ECO_MainMCU_App

# ifeq ($(OS),Windows_NT)
#     SHELL := pwsh.exe
# else
#    SHELL := pwsh
# endif
# .SHELLFLAGS := -NoProfile -Command 

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build
COMMON_DIR = ../Common

MCUBOOT_DIR = $(COMMON_DIR)/external/mcuboot
MCUBOOT_SRC_DIR = $(MCUBOOT_DIR)/boot/bootutil/src
MCUBOOT_INC_DIR = $(MCUBOOT_DIR)/boot/bootutil/include

MCUBOOT_SRC_FILES =
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/boot_record.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/bootutil_misc.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/bootutil_public.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/caps.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/encrypted.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/fault_injection_hardening.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/fault_injection_hardening_delay_rng_mbedtls.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/image_ec.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/image_ec256.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/image_ed25519.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/image_rsa.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/image_validate.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/loader.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/swap_misc.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/swap_move.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/swap_scratch.c
MCUBOOT_SRC_FILES += $(MCUBOOT_SRC_DIR)/tlv.c

# Also need mcuboot_config/ on path
MCUBOOT_INC_PATHS = -I$(MCUBOOT_INC_DIR)

MBEDTLS_DIR = $(MCUBOOT_DIR)/ext/mbedtls
MBEDTLS_SRC_DIR = $(MBEDTLS_DIR)/library
MBEDTLS_INC_DIR = $(MBEDTLS_DIR)/include

MBEDTLS_SRC_FILES = 
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/aes.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/aesni.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/aria.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/asn1parse.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/asn1write.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/base64.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/bignum.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/camellia.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ccm.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/chacha20.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/chachapoly.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/cipher.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/cipher_wrap.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/cmac.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ctr_drbg.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/debug.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/des.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/dhm.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ecdh.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ecdsa.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ecjpake.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ecp.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ecp_curves.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/entropy.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/entropy_poll.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/error.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/gcm.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/hkdf.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/hmac_drbg.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/md.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/md5.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/memory_buffer_alloc.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/mps_reader.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/mps_trace.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/net_sockets.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/nist_kw.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/oid.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/padlock.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/pem.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/pk.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/pkcs12.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/pkcs5.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/pkparse.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/pkwrite.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/pk_wrap.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/platform.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/platform_util.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/poly1305.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_aead.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_cipher.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_client.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_driver_wrappers.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_ecp.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_hash.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_mac.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_rsa.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_se.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_slot_management.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_crypto_storage.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/psa_its_file.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ripemd160.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/rsa.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/rsa_alt_helpers.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/sha1.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/sha256.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/sha512.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ssl_cache.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ssl_ciphersuites.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ssl_cli.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ssl_cookie.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ssl_msg.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ssl_srv.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ssl_ticket.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ssl_tls.c
# MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/ssl_tls13_keys.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/threading.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/timing.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/version.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/version_features.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/x509.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/x509write_crt.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/x509write_csr.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/x509_create.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/x509_crl.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/x509_crt.c
MBEDTLS_SRC_FILES += $(MBEDTLS_SRC_DIR)/x509_csr.c

MBEDTLS_INC_PATHS = -I$(MBEDTLS_INC_DIR)

COMMON_SRCS = 
COMMON_SRCS += $(COMMON_DIR)/external/printf/printf.c
COMMON_SRCS += $(COMMON_DIR)/external/RingBuffer/Src/ring.c
COMMON_SRCS += $(COMMON_DIR)/drivers/W25Q64/W25Q64_Flash.c
COMMON_SRCS += $(COMMON_DIR)/flash/flash_map_backend/flash_map_backend.c

COMMON_INCLUDES = 
COMMON_INCLUDES += -I$(COMMON_DIR)/external/printf
COMMON_INCLUDES += -I$(COMMON_DIR)/external/RingBuffer/Src
COMMON_INCLUDES += -I$(COMMON_DIR)/flash
COMMON_INCLUDES += -I$(COMMON_DIR)/drivers/W25Q64

RTOS_SOURCES =
RTOS_SOURCES += Application/RTOS/FreeRTOS/tasks.c
RTOS_SOURCES += Application/RTOS/FreeRTOS/queue.c
RTOS_SOURCES += Application/RTOS/FreeRTOS/list.c
RTOS_SOURCES += Application/RTOS/FreeRTOS/portable/GCC/ARM_CM0/port.c
RTOS_SOURCES += Application/RTOS/FreeRTOS/portable/MemMang/heap_4.c

RTOS_SOURCES += Application/RTOS/FreeRTOS/timers.c
# RTOS_SOURCES += Application/RTOS/FreeRTOS/croutine.c
# RTOS_SOURCES += Application/RTOS/FreeRTOS/event_groups.c
# RTOS_SOURCES += Application/RTOS/FreeRTOS/stream_buffer.c

RTOS_SOURCES += Application/RTOS/RTOSHelpers/RTOS_Helpers.c

RTOS_INCLUDES =
RTOS_INCLUDES += -IApplication/RTOS 
RTOS_INCLUDES += -IApplication/RTOS/FreeRTOS/portable/GCC/ARM_CM0
RTOS_INCLUDES += -IApplication/RTOS/FreeRTOS/include
RTOS_INCLUDES += -IApplication/RTOS/RTOSHelpers

######################################
# source
######################################
# C sources
C_SOURCES =  \
Application/Application/Led/Src/LED.c \
Application/Application/Led/Cfg/LED_Cfg.c \
Application/Src/application.c \
Application/Communication/Network/Src/Ethernet.c \
Application/Communication/Network/Cfg/Ethernet_Cfg.c \
Application/Communication/Modbus/RTUMaster/ModbusRTUMaster.c \
Application/Communication/Modbus/TCPServer/ModbusTCPServer.c \
Application/Communication/MQTT/Src/MQTT.c \
Application/DeviceDrivers/DAC/Src/DAC.c \
Application/DeviceDrivers/Ethernet/socket.c \
Application/DeviceDrivers/Ethernet/wizchip_conf.c \
Application/DeviceDrivers/Ethernet/W5500/w5500.c \
Application/DeviceDrivers/EEPROM/Src/EEPROM.c \
Application/DeviceDrivers/EnergyMeter/Src/EnergyMeter.c \
Application/DeviceDrivers/Heater/Src/Heater.c \
Application/DeviceDrivers/Heater/Cfg/Heater_Cfg.c \
Application/DeviceDrivers/HMI/Src/HMI_SWUpdate.c \
Application/DeviceDrivers/MCP23017/Src/MCP23017.c \
Application/DeviceDrivers/MCU/HALHelpers/HALHelpers.c \
Application/DeviceDrivers/MCU/MCU_SWUpdate/Src/MCU_SWUpdate.c \
Application/DeviceDrivers/W25Qxx/Src/w25qxx.c \
Application/Libraries/sys/syscalls.c \
Application/Libraries/sys/sysmem.c \
Application/Services/CLI/FreeRTOS_CLI/FreeRTOS_CLI.c \
Application/Services/CLI/Src/CLI.c \
Application/Services/ConfigMgr/Src/ConfigMgr.c \
Application/Services/DateTimeMgr/Src/DateTimeMgr.c \
Application/Services/EventLog/Src/EventLog.c \
Application/Services/I2CGpio/Src/I2CGpio.c \
Application/Services/Internet/DNS/dns.c \
Application/Services/Internet/MQTT/MQTTClient.c \
Application/Services/Internet/MQTT/mqtt_interface.c \
Application/Services/Internet/SNTP/sntp.c \
Application/Services/ResourceGuard/Src/ResourceGuard.c \
Application/Services/RuntimeStats/Src/CommStats.c \
Application/Services/SPIFlash/Src/SPI_Flash.c \
Application/Services/SWUpdate/Src/SWUpdate.c \
Core/Src/main.c \
Core/Src/logging.c \
Core/Src/gpio.c \
Core/Src/crc.c \
Core/Src/fdcan.c \
Core/Src/i2c.c \
Core/Src/rtc.c \
Core/Src/spi.c \
Core/Src/usart.c \
Core/Src/stm32g0xx_it.c \
Core/Src/stm32g0xx_hal_msp.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_crc.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_crc_ex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rcc_ex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_rcc.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_flash.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_flash_ex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_gpio.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_dma_ex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_dma.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_pwr.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_pwr_ex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_cortex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_exti.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_fdcan.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_i2c.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_i2c_ex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rtc.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_rtc_ex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_spi_ex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_tim.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_tim_ex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_uart_ex.c \
Core/Src/system_stm32g0xx.c \
Core/Src/stm32g0xx_hal_timebase_tim.c \
Core/Src/tim.c \
Core/Src/adc.c \
Core/Src/dma.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc_ex.c \
Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_adc.c

C_SOURCES += ${RTOS_SOURCES}
C_SOURCES += $(COMMON_SRCS)
C_SOURCES += $(MCUBOOT_SRC_FILES)
C_SOURCES += $(MBEDTLS_SRC_FILES)

# ASM sources
ASM_SOURCES =  \
startup_stm32g0b1xx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
PYTHON = python

#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m0plus

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi
FLOAT-ABI = -mfloat-abi=soft

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32G0B1xx \
-DMBEDTLS_NO_PLATFORM_ENTROPY \
-DMBEDTLS_SHA256_SMALLER \
-DPRINTF_INCLUDE_CONFIG_H \
-DMBEDTLS_CONFIG_FILE='"app_mbedtls_config.h"'


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-IApplication/Src \
-IApplication/Application/Led/Src \
-IApplication/Application/Led/Cfg \
-IApplication/Communication/Network/Src \
-IApplication/Communication/Network/Cfg \
-IApplication/Communication/Modbus/RTUMaster \
-IApplication/Communication/Modbus/TCPServer \
-IApplication/DeviceDrivers/DAC/Src \
-IApplication/DeviceDrivers/EEPROM/Src \
-IApplication/DeviceDrivers/Ethernet \
-IApplication/DeviceDrivers/Ethernet/W5500 \
-IApplication/DeviceDrivers/EnergyMeter/Src \
-IApplication/DeviceDrivers/Heater/Src \
-IApplication/DeviceDrivers/Heater/Cfg \
-IApplication/DeviceDrivers/HMI/Src \
-IApplication/DeviceDrivers/MCP23017/Src \
-IApplication/DeviceDrivers/MCU/MCU_SWUpdate/Src \
-IApplication/DeviceDrivers/W25Qxx/Src \
-IApplication/DeviceDrivers/W25Qxx/Cfg \
-IApplication/Services/CLI/FreeRTOS_CLI \
-IApplication/Services/CLI/Src \
-IApplication/Services/ConfigMgr/Src \
-IApplication/Services/DateTimeMgr/Src \
-IApplication/Services/EventLog/Src \
-IApplication/Services/I2CGpio/Src \
-IApplication/Services/Internet/DNS \
-IApplication/Services/Internet/MQTT \
-IApplication/Services/Internet/SNTP \
-IApplication/Services/printf \
-IApplication/Services/ResourceGuard/Src \
-IApplication/Services/RuntimeStats/Src \
-IApplication/Services/SPIFlash/Src \
-IApplication/Services/SPIFlash/Cfg \
-IApplication/Services/SWUpdate/Src \
-ICore/Inc \
-IDrivers/STM32G0xx_HAL_Driver/Inc \
-IDrivers/STM32G0xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32G0xx/Include \
-IDrivers/CMSIS/Include

C_INCLUDES += ${RTOS_INCLUDES}
C_INCLUDES += $(COMMON_INCLUDES)
C_INCLUDES += $(MCUBOOT_INC_PATHS)
C_INCLUDES += $(MBEDTLS_INC_PATHS)

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU)
CFLAGS += $(C_DEFS)
CFLAGS += $(C_INCLUDES)
CFLAGS += $(OPT) 
CFLAGS += -Wall
CFLAGS += -Wextra
CFLAGS += -fdata-sections 
CFLAGS += -ffunction-sections
CFLAGS += -fverbose-asm 
CFLAGS += -fstack-usage
CFLAGS += -specs=nano.specs 
# CFLAGS += -specs=nosys.specs
CFLAGS += -std=gnu11

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32G0B1RETx_FLASH.ld

LDSCRIPT = STM32G0B1RETx_.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections -Wl,--print-memory-usage

.PHONY: all sign clean

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin $(BUILD_DIR)/$(TARGET)_signed.bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/objects/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/objects/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/objects/%.o: %.c Makefile | $(BUILD_DIR)
	@echo Processing $(notdir $<)
	@$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/objects/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/objects/%.o: %.s Makefile | $(BUILD_DIR)
	@echo Processing $(notdir $<)
	@$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	@$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	@$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	@$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	@$(BIN) $< $@	

$(BUILD_DIR)/%_signed.hex: $(BUILD_DIR)/%.hex
	@$(PYTHON) $(MCUBOOT_DIR)/scripts/imgtool.py sign \
	--header-size 0x200 \
	--align 8 \
	--slot-size 0x60000 \
	--version 1.0.0 \
	--pad-header \
	$< \
	$@

$(BUILD_DIR)/%_signed.bin: $(BUILD_DIR)/%_signed.hex
	@$(CP) --input-target=ihex --output-target=binary $< $@

sign: $(BUILD_DIR)/$(TARGET)_signed.bin | $(BUILD_DIR)/$(TARGET)_signed.hex

$(BUILD_DIR):
	@mkdir $@
	@mkdir $@/objects

#######################################
# clean up
#######################################
clean:
	@rm -R $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/objects/*.d)

# *** EOF ***
